#include<iostream>
#include<vector>
#include<chrono>
using namespace std;
using namespace std::chrono;

int main() {

	vector<int> v = {5, 15, 1, 6, 70, 8, 9};
	int temp;
	auto start_time = high_resolution_clock::now();

	for (int i = 0; i < v.size() - 1; i++) {
		int small_in = i;
		for (int j = i + 1; j < v.size(); j++) {
			cout << "Items Compared: " << v[i] << " and " << v[j] << endl;
			if (v[j] < v[small_in]) {
				small_in = j;
			}
		}
		if (small_in != i) {
			temp = v[i];
			v[i] = v[small_in];
			v[small_in] = temp;
			cout << "Swapped: " << v[i] << " and " << v[small_in] << endl;
		} else {
			cout << "No swap needed for: " << v[i] << endl;
		}
		cout << "----------------------------" << endl;
	}

	auto end_time = high_resolution_clock::now();
	auto duration = duration_cast<microseconds>(end_time - start_time);

	cout << "Selection Sorted:" << endl;
	for (int i = 0; i < v.size(); i++) {
		cout << v[i] << " ";
	}
	cout << endl;
	cout << "Execution Time: " << duration.count() << " microseconds" << endl;

	return 0;
}


//Time complexity 
// => n*(n - 1)
// => n2 - n
// => O(n2 - n)
// => O(n2)

//Space Complexity (It's constant because use of vector/ list / array so, O(1) 
